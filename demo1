export function validateDhcpIPRange(
  ipAddress: string,
  subnetMask: string,
  startIpAddress: string,
  endIpAddress: string
): string[] {
  const errors: string[] = [];

  function ipToInt(ip: string): number {
    return ip.split(".").reduce((acc, octet) => (acc << 8) + parseInt(octet, 10), 0);
  }

  const ipInt = ipToInt(ipAddress);
  const subnetMaskInt = ipToInt(subnetMask);
  const networkAddressInt = ipInt & subnetMaskInt;

  const startIpInt = ipToInt(startIpAddress);
  const endIpInt = ipToInt(endIpAddress);

  const startNetworkInt = startIpInt & subnetMaskInt;
  const endNetworkInt = endIpInt & subnetMaskInt;

  if (startNetworkInt !== networkAddressInt && endNetworkInt !== networkAddressInt) {
    errors.push(
      "Start IP Address, End IP Address: The DHCP IP address range does not conform to the connection IP address and the DHCP subnet mask."
    );
  } else if (endNetworkInt !== networkAddressInt) {
    errors.push(
      "End IP Address: The DHCP IP address range does not conform to the connection IP address and the DHCP subnet mask."
    );
  } else if (startNetworkInt !== networkAddressInt) {
    errors.push(
      "Start IP Address: The DHCP IP address range does not conform to the connection IP address and the DHCP subnet mask."
    );
  }
  if (endIpInt - startIpInt + 1 > 256) {
    errors.push("The number of IP Addresses in the DHCP IP address range must not be more than 256.");
  }

  return errors;
}


so i have a function can we also include the validation of 
IP Addresses: The Device's IP address should not be in the range of the IP pool.
here

function renderSetupPage() {
  const app = document.getElementById("temp-root");
  if (!app || !selectedRouter) return;

  // Save selected model
  setConfigStore("modelName", selectedRouter.model);

  app.innerHTML = `
    <header class="header">${selectedRouter.name} Quick Setup</header>
    <div class="setup-form">
      <div class="setup-group">
        <label class="setup-label">Profile Mode</label>
        <div class="options" id="profile-mode-options">
          ${availableProfileMode
            .map(
              (mode) =>
                `<button class="profile-btn ${selectedProfileMode === mode ? "selected" : ""}" data-mode="${mode}">${mode}</button>`
            )
            .join("")}
        </div>
      </div>

      <div class="setup-group">
        <label class="setup-label">Enable QSW</label>
        <div class="options" id="qsw-options">
          <button class="toggle-btn ${qswEnableStatus ? "selected" : ""}" data-target="qsw" data-value="true">True</button>
          <button class="toggle-btn ${!qswEnableStatus ? "selected" : ""}" data-target="qsw" data-value="false">False</button>
        </div>
      </div>

      <div class="setup-group">
        <label class="setup-label">Enable Speed Test</label>
        <div class="options" id="speedtest-options">
          <button class="toggle-btn ${speedTestEnabled ? "selected" : ""}" data-target="speedtest" data-value="true">True</button>
          <button class="toggle-btn ${!speedTestEnabled ? "selected" : ""}" data-target="speedtest" data-value="false">False</button>
        </div>
      </div>

      <div class="setup-group">
        <label class="setup-label">Password</label>
        <input type="text" id="password-input" placeholder="Enter password">
      </div>
      <div class="setup-desc">
        Attention! This password will be used to login the Simulator GUI
      </div>

      <button id="finish-btn">Finish</button>
    </div>
  `;

  // Profile mode selection
  document.querySelectorAll(".profile-btn").forEach((btn) => {
    btn.addEventListener("click", () => {
      // Update variable
      selectedProfileMode = btn.getAttribute("data-mode");

      // Update UI
      document.querySelectorAll(".profile-btn").forEach((b) => b.classList.remove("selected"));
      btn.classList.add("selected");
    });
  });

  // Toggle QSW and Speed Test
  document.querySelectorAll(".toggle-btn").forEach((btn) => {
    btn.addEventListener("click", () => {
      const target = btn.getAttribute("data-target");
      const value = btn.getAttribute("data-value") === "true";

      if (target === "qsw") qswEnableStatus = value;
      else if (target === "speedtest") speedTestEnabled = value;

      // Update UI for the specific toggle group
      const groupId = target === "qsw" ? "qsw-options" : "speedtest-options";
      document.querySelectorAll(`#${groupId} .toggle-btn`).forEach((b) => b.classList.remove("selected"));
      btn.classList.add("selected");
    });
  });

  document.getElementById("finish-btn").addEventListener("click", () => {
    const password = document.getElementById("password-input").value;
    alert(`Setup Complete!\nModel: ${selectedRouter.model}\nMode: ${selectedProfileMode}\nQSW: ${qswEnableStatus}\nSpeed Test: ${speedTestEnabled}\nPassword: ${password}`);
  });
}

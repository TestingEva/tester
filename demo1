great its working fine as usual 

now i just want to create a new validations for checking whether some port are overlapping 

for example if we input [ 4567, [ 244, 254 ], [ 457, 4566 ], 21 ,251]

then we see that 251 already comes in the range of [244,254] so you need to return this array 

and suppose our input was [ 456, [ 244, 254 ], [ 457, 4566 ], 456 ] then you should return the number 456 

suppose our entry was valid no port overlapping then return true









function checkPortOverlap(ports: (number | [number, number])[]): true | number | [number, number] {
    const portSet = new Set<number>();

    for (const port of ports) {
        if (Array.isArray(port)) {
            const [start, end] = port;
            for (let p = start; p <= end; p++) {
                if (portSet.has(p)) {
                    return port; // Return the overlapping range
                }
                portSet.add(p);
            }
        } else {
            if (portSet.has(port)) {
                return port; // Return the overlapping individual port
            }
            portSet.add(port);
        }
    }

    return true; // Return true if no overlaps are found
}

// Example Usage
const testPorts1 = [4567, [244, 254], [457, 4566], 21, 251];
const result1 = checkPortOverlap(testPorts1);
console.log(result1); // Output: [244, 254]

const testPorts2 = [456, [244, 254], [457, 4566], 456];
const result2 = checkPortOverlap(testPorts2);
console.log(result2); // Output: 456

const testPorts3 = [456, [244, 254], [457, 4566], 21];
const result3 = checkPortOverlap(testPorts3);
console.log(result3); // Output: true

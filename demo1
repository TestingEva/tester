export type BackhaulLogEntry = {
  dateTime: Dayjs;
  backhaulType: BackhaulType;
  connectionRateMbps: number;
  macAddress?: string;
};

export const convertBackhaulLogApiResponse = (data: string, platformType: PlatformType): BackhaulLogEntry[] => {
  if (data.length === 0) {
    return [];
  }
  const lineSeparator = "\u2551";
  const valueSeparator = "\u2588";
  const trimmedData = data.trim();
  const splitList = trimmedData.split(lineSeparator).slice(0, trimmedData.endsWith(lineSeparator) ? -1 : undefined);

  return splitList
    .map((val) => {
      const splitVal = val.split(valueSeparator);
      const dateTimeString = splitVal[0].trim();
      if (!dateTimeString || !dayjs(dateTimeString).isValid()) {
        return null;
      }
 
      const commonFields = {
        dateTime: dayjs(dateTimeString),
        backhaulType: convertStringToBackhaulType(splitVal[1]?.trim()),
        connectionRate: convertMbpsToGbps(splitVal[2]?.trim()),
      };
      if (platformType === PlatformType.Router) {
        return {
          ...commonFields,
          macAddress: splitVal[3]?.trim(),
        };
      }
      return commonFields;
    })
    .filter((entry): entry is BackhaulLogEntry => entry !== null);
};

the following error i am getting

const routers = [
  {
    name: "Verizon Router",
    model: "CR1000A",
    image: "./images/cr1000a.png",
  },
  {
    name: "Verizon Router",
    model: "CR1000B",
    image: "./images/cr1000a.png",
  },
  {
    name: "Verizon Internet Access Point - Router",
    model: "CHR30A-R",
    image: "./images/chr30a.png",
  },
  {
    name: "Verizon Internet Access Point - Extender",
    model: "CHR30A-E",
    image: "./images/chr30a.png",
  },
  {
    name: "Verizon Internet Gateway",
    model: "WNC-CR200A",
    image: "./images/wnc_cr200a.png",
  },
  {
    name: "Verizon Extender",
    model: "CE1000A",
    image: "./images/ce1000a.png",
  },
];

let selectedRouter = null;
let selectedProfileMode = "Fios Home";
const availableProfileMode = ["Fios Home", "Fios Business", "FWA Home", "FWA Business"];
let qswEnableStatus = false;
let speedTestEnabled = true;

function init() {
  renderRouterSelection();
}

function renderRouterSelection() {
  const app = document.getElementById("temp-root");
  if (!app) return;

  app.innerHTML = `
    <header class="header">GUI Simulator List</header>
    <div class="router-list">
      ${routers
        .map(
          (router, index) => `
        <div class="router-card" data-index="${index}">
          <img src="${router.image}" alt="${router.name}">
          <h4>${router.name}</h4>
          <p>${router.model}</p>
        </div>
      `
        )
        .join("")}
    </div>
    <button id="proceed-btn" disabled>Proceed</button>
  `;

  const routerCards = document.querySelectorAll(".router-card");
  routerCards.forEach((card) => {
    card.addEventListener("click", () => {
      routerCards.forEach((c) => c.classList.remove("selected"));
      card.classList.add("selected");
      const index = card.getAttribute("data-index");
      selectedRouter = routers[Number(index)];
      document.getElementById("proceed-btn").disabled = false;
    });
  });

  const proceedBtn = document.getElementById("proceed-btn");
  proceedBtn.addEventListener("click", renderSetupPage);
}

function setConfigStore(key, value) {
  localStorage.setItem(key, value);
}

function renderSetupPage() {
  const app = document.getElementById("temp-root");
  if (!app || !selectedRouter) return;

  //Setting up the modal in the config storage
  setConfigStore("modelName", selectedRouter.model);

  app.innerHTML = `
    <header class="header">${selectedRouter.name} Quick Setup</header>
    <div class="setup-form">
      <div class="setup-group">
        <label class="setup-label">Profile Mode</label>
        <div class="options">
            ${availableProfileMode
              .map(
                (mode) =>
                  `<button class="profile-btn ${selectedProfileMode === mode ? "selected" : ""}">${mode}</button>`
              )
              .join("")}
        </div>
      </div>

      <div class="setup-group">
        <label class="setup-label">Enable QSW</label>
        <div class="options">
          <button class="toggle-btn ${qswEnableStatus ? "selected" : ""}" data-true="true">True</button>
          <button class="toggle-btn ${!qswEnableStatus ? "selected" : ""}" data-true="false">False</button>
        </div>
      </div>

      <div class="setup-group">
        <label class="setup-label">Enable Speed Test</label>
        <div class="options">
          <button class="toggle-btn ${speedTestEnabled ? "selected" : ""}" data-true="true">True</button>
          <button class="toggle-btn ${!speedTestEnabled ? "selected" : ""}" data-true="false">False</button>
        </div>
      </div>

      <div class="setup-group">
        <label class="setup-label">Password</label>
        <input type="text" id="password-input" placeholder="Enter password">
      </div>
        <div class="setup-desc">
            Attention! This password will be used to login the Simulator GUI
        </div>

      <button id="finish-btn">Finish</button>
    </div>
  `;

  const profileButtons = document.querySelectorAll(".profile-btn");
  profileButtons.forEach((btn) => {
    btn.addEventListener("click", () => {});
  });

  const toggleButtons = document.querySelectorAll(".toggle-btn");
  toggleButtons.forEach((btn) => {
    btn.addEventListener("click", () => {});
  });

  document.getElementById("finish-btn").addEventListener("click", () => {
    alert("Setup Complete!");
  });
}

document.addEventListener("DOMContentLoaded", init);


Please make this dynamic on click update the variables 

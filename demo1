function checkConflict(
  profiles: PortForwardingProfileInfo[],
  ports: (number | [number, number])[]
): true | number | [number, number] {
  console.log(profiles, ports);
  const existingPortsSet = new Set<number>();

  // Populate the existing ports set from the profiles
  for (const profile of profiles) {
    if (profile.enabled) {
      profile.originalPorts.forEach((port) => {
        if (Array.isArray(port)) {
          const [start, end] = port;
          for (let p = start; p <= end; p++) {
            existingPortsSet.add(p);
          }
        } else {
          existingPortsSet.add(port);
        }
      });
    }
  }

  // Check the new ports against the existing ports set
  for (const port of ports) {
    if (Array.isArray(port)) {
      const [start, end] = port;
      for (let p = start; p <= end; p++) {
        if (existingPortsSet.has(p)) {
          return port; // Return the whole range if a conflict is found
        }
      }
    } else {
      if (existingPortsSet.has(port)) {
        return port; // Return the specific port if a conflict is found
      }
    }
  }

  return true; // Return true if no conflicts are found
}

profiles = [
    {
        "id": "5feb467b-0633-49fa-b3ef-bd99d5697daa",
        "name": "twete",
        "forwardPort": 1233,
        "protocol": 0,
        "hostIpAddress": {
            "octets": [
                192,
                168,
                1,
                23
            ]
        },
        "originalPorts": [
            123,
            [
                222,
                333
            ],
            [
                4500,
                4501
            ]
        ],
        "schedule": "Always",
        "enabled": true,
        "index": 1
    }
]

ports = [
    [
        111,
        221
    ]
]

why its returning [111,221] as we can see there is no conflict there


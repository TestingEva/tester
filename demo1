import styled from "styled-components";
import { FormControl, Dropdown, Modal, Button } from "react-bootstrap";
import { useState } from "react";
import { useQuerySuggestions } from "./useQuerySuggestions";

const SearchContainer = styled.div`
  position: relative;
  width: 300px;
`;

const InputWrapper = styled.div`
  position: relative;
  display: flex;
`;

const StyledInput = styled(FormControl)`
  font-size: 16px;
  padding: 8px;
  position: absolute;
  background: transparent;
  z-index: 2;
`;

const AutocompleteText = styled.span`
  font-size: 16px;
  padding: 8px;
  color: gray;
  pointer-events: none;
  white-space: nowrap;
  overflow: hidden;
`;


const SearchInput: React.FC = () => {
  const { suggestQueries, suggestions, currentSuggestion, nextSuggestion, prevSuggestion } = useQuerySuggestions();
  const [query, setQuery] = useState("");
  const [showDropdown, setShowDropdown] = useState(false);
  const [showModal, setShowModal] = useState(false);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = e.target.value;
    setQuery(value);
    suggestQueries(value);
    setShowDropdown(value.length > 0);
  };

  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === "ArrowDown") {
      nextSuggestion();
    } else if (e.key === "ArrowUp") {
      prevSuggestion();
    } else if (e.key === "Tab" && currentSuggestion) {
      e.preventDefault();
      setQuery(query + currentSuggestion);
    }
  };

  return (
    <>
      <SearchContainer>
        <InputWrapper>
          <AutocompleteText>{query}{currentSuggestion ? currentSuggestion : ""}</AutocompleteText>
          <StyledInput
            type="text"
            value={query}
            onChange={handleInputChange}
            onKeyDown={handleKeyDown}
            placeholder="Search..."
          />
        </InputWrapper>

        {showDropdown && (
          <Dropdown.Menu show style={{ width: "100%" }}>
            {suggestions.map((sugg) => (
              <Dropdown.Item key={sugg} active={sugg === currentSuggestion}>
                {sugg}
              </Dropdown.Item>
            ))}
          </Dropdown.Menu>
        )}
      </SearchContainer>

      <Button variant="primary" onClick={() => setShowModal(true)}>Open Search</Button>

      <Modal show={showModal} onHide={() => setShowModal(false)}>
        <Modal.Header closeButton>
          <Modal.Title>Search</Modal.Title>
        </Modal.Header>
        <Modal.Body>
          <InputWrapper>
            <AutocompleteText>{query}{currentSuggestion ? currentSuggestion : ""}</AutocompleteText>
            <StyledInput
              type="text"
              value={query}
              onChange={handleInputChange}
              onKeyDown={handleKeyDown}
              placeholder="Search..."
            />
          </InputWrapper>
        </Modal.Body>
      </Modal>
    </>
  );
};

export default SearchInput;

import dayjs from "dayjs";
import React, { useState } from "react";
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.module.css";
import "./DatePicker.css";
import { ArrowLeft, ArrowRight, CustomCalendarInput, CustomHeaderContainer, VZDatePickerContainer } from "./styles";

interface VZDatePickerProps {
  selectedDate: dayjs.Dayjs | null;
  setSelectedDate: (date: dayjs.Dayjs | null) => void;
}

const formatDayJsDate = (date: dayjs.Dayjs | null) => {
  return date ? date.format("MMM YYYY") : "";
};

const CustomHeader = ({
  event,
  selectedDate,
  setSelectedDate,
  setOpenCalendar,
}: {
  event: any;
  selectedDate: dayjs.Dayjs | null;
  setSelectedDate: (date: dayjs.Dayjs | null) => void;
  setOpenCalendar: (open: boolean) => void;
}) => (
  <CustomHeaderContainer>
    <ArrowLeft
      onClick={() => {
        event?.decreaseMonth();
        setSelectedDate(dayjs(selectedDate).subtract(1, "month"));
        setOpenCalendar(false);
        setTimeout(() => setOpenCalendar(true), 0);  // Close and reopen to refresh
      }}
      className="icon icon--arrow vz-date-left-arrow"
    />
    <div className="flex-1" />
    <DatePicker
      selected={selectedDate?.toDate()}
      onChange={(date: Date | null) => setSelectedDate(date ? dayjs(date) : null)}
      onSelect={(date: Date | null) => {
        setSelectedDate(date ? dayjs(date) : null);
        setOpenCalendar(false);
        setTimeout(() => setOpenCalendar(true), 0);  // Close and reopen to refresh
      }}
      onYearChange={(date: Date | null) => {
        setSelectedDate(date ? dayjs(date) : null);
        setOpenCalendar(false);
        setTimeout(() => setOpenCalendar(true), 0);  // Close and reopen to refresh
      }}
      showMonthYearPicker
      adjustDateOnChange
      customInput={<CustomCalendarInput>{formatDayJsDate(selectedDate)}</CustomCalendarInput>}
      calendarClassName="vz-month-calendar"
      dateFormat={"MMM YYYY"}
    />
    <div className="flex-1" />
    <ArrowRight
      onClick={() => {
        event?.increaseMonth();
        setSelectedDate(dayjs(selectedDate).add(1, "month"));
        setOpenCalendar(false);
        setTimeout(() => setOpenCalendar(true), 0);  // Close and reopen to refresh
      }}
      className="icon icon--arrow vz-date-right-arrow"
    />
  </CustomHeaderContainer>
);

export const VZDatePicker: React.FC<VZDatePickerProps> = ({ selectedDate, setSelectedDate }) => {
  const [openCalendar, setOpenCalendar] = useState(false);

  const setDate = (date: Date | null) => {
    setSelectedDate(date ? dayjs(date) : null);
  };

  return (
    <VZDatePickerContainer onMouseEnter={() => setOpenCalendar(true)} onMouseLeave={() => setOpenCalendar(false)}>
      <DatePicker
        selected={selectedDate?.toDate()}
        onChange={(date) => setDate(date)}
        dateFormat={"MM/dd/yy"}
        calendarClassName="vz-calendar"
        className="vz-date-picker h"
        adjustDateOnChange
        formatWeekDay={(nameOfDay) => nameOfDay.slice(0, 1)}
        renderCustomHeader={(e) => (
          <CustomHeader event={e} selectedDate={selectedDate} setSelectedDate={setSelectedDate} setOpenCalendar={setOpenCalendar} />
        )}
        open={openCalendar}
      />
    </VZDatePickerContainer>
  );
};

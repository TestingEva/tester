import dayjs from "dayjs";
import React, { useState } from "react";
import DatePicker from "react-datepicker";
import styled from "styled-components";

interface VZDatePickerProps {
  selectedDate: dayjs.Dayjs | null;
  setSelectedDate: (date: dayjs.Dayjs | null) => void;
}

const VZDatePickerContainer = styled.div`
  width: 100%;
  border: 1px solid #d8dada;
  border-bottom-color: #000;
  color: #000;
  font-size: 16px;
  line-height: 16px;
  padding: 12px 0 12px 44px !important;
`;

const CustomCalendarInput = styled.div`
  cursor: pointer;
`;

const CustomHeaderContainer = styled.div`
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  padding: 5px 15px;
`;

const ArrowLeft = styled.i`
  transform: rotateZ(90deg);
  cursor: pointer;
`;

const ArrowRight = styled.i`
  transform: rotateZ(-90deg);
  cursor: pointer;
`;

const CustomInput = ({ value, onClick }: { value?: string; onClick?: () => void }) => (
  <CustomCalendarInput onClick={onClick}>{value}</CustomCalendarInput>
);

const formatDayJsDate = (date: dayjs.Dayjs | null) => {
  return date ? date.format("MMMM YYYY") : "";
};

const CustomHeader = ({
  decreaseMonth,
  increaseMonth,
  selectedDate,
}: {
  decreaseMonth: () => void;
  increaseMonth: () => void;
  selectedDate: dayjs.Dayjs | null;
}) => (
  <CustomHeaderContainer>
    <ArrowLeft onClick={decreaseMonth} className="icon icon-arrow vz-date-left-arrow" />
    <span>{formatDayJsDate(selectedDate)}</span>
    <ArrowRight onClick={increaseMonth} className="icon icon-arrow vz-date-right-arrow" />
  </CustomHeaderContainer>
);

export const VZDatePicker: React.FC<VZDatePickerProps> = ({ selectedDate, setSelectedDate }) => {
  const [openCalendar, setOpenCalendar] = useState(false);

  const setDate = (date: Date | null) => {
    const newDate = date ? dayjs(date) : null;
    setSelectedDate(newDate);
  };

  return (
    <VZDatePickerContainer onMouseEnter={() => setOpenCalendar(true)} onMouseLeave={() => setOpenCalendar(false)}>
      <DatePicker
        selected={selectedDate?.toDate()}
        onChange={(date) => setDate(date)}
        dateFormat={"MM/dd/yy"}
        calendarClassName="vz-calendar"
        className="vz-date-picker h"
        formatWeekDay={(nameOfDay) => nameOfDay.slice(0, 1)}
        renderCustomHeader={(e) => (
          <CustomHeader
            decreaseMonth={e.decreaseMonth}
            increaseMonth={e.increaseMonth}
            selectedDate={selectedDate}
          />
        )}
        open={openCalendar}
      />
    </VZDatePickerContainer>
  );
};

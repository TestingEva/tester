export const DeviceIcons = ({ type, className }) => {
    const deviceTypeIcons = {
        'Desktop/Laptop': 'laptop',
        'Network Camera': 'netcamera',
        'Phone': 'phone',
        'Print Server': 'print',
        'Tablet': 'tablet',
        'IP-STB/TV': 'topbox'
    }
    const devType = deviceTypeIcons?.[type];

    return (
        <>
            <div className={`icon icon-${devType ? devType : "laptop"} ${className}`} />
        </>
    )
}

Like i had created a component like when i was making utility components in my project and this component has been used at multiple places and it 
now the requirements have changed Like let me show you my App.css 
.App {
  background-color: white;
}

@font-face {
  font-family: 'Verizon NHG eDS Bold';
  src: url("../fonts/VerizonNHGeDS-Bold.woff") format("woff");
}

@font-face {
  font-family: "Verizon NHG eDS";
  src: url("../fonts/VerizonNHGeDS-Regular.woff") format("woff");
}

@font-face {
  font-family: "Verizon NHG eTX";
  src: url("../fonts/VerizonNHGeTX-Regular.woff") format("woff");
}

@font-face {
  font-family: "Verizon NHG eTX Bold";
  src: url("../fonts/VerizonNHGeTX-Bold.woff") format("woff");
}

@font-face {
  font-family: "vzIcon";
  font-display: swap;
  src: url("../fonts/vzIcons.6689d4e0.woff") format("woff")
}

.t {
  font-family: "Verizon NHG eTX", sans-serif;
}

.b {
  font-family: "Verizon NHG eTX Bold", sans-serif;
}

.h {
  font-family: "Verizon NHG eDS", sans-serif;
}

.hb {
  font-family: "Verizon NHG eDS Bold", sans-serif;
}

body {
  font-family: "Verizon NHG eTX", sans-serif;
  font-size: 12px;
  overscroll-behavior: none;
  overflow: hidden;
  line-height: 16px;
  color: black;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Verizon NHG eDS Bold", sans-serif;
}


.br-0 div {
  border-radius: 0px;
}

.padding-5 {
  padding: 5px;
}

.tooltip-font {
  font-size: 11.5px !important;
  font-family: "Verizon NHG eTX", sans-serif !important;
}

.modal-heading {
  padding: 15px;
  font-size: 20px;
  /* color: #d52b1e; */
}

.modal-cross-button {
  cursor: pointer;
  align-self: center;
}

.modal-body {
  font-size: 16px;
  line-height: 20px;
  /* padding: 26px; */
  color: black;
}

.disp-none {
  display: none;
}

.flex-1 {
  flex: 1;
}

.disp-flex {
  display: flex;
}

.icon {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 18px;
  font-size: 18px
}

.icon:before {
  font-family: vzIcon
}

.icon-caret:before {
  content: "\e000"
}

.icon-close-alt:before {
  content: "\e001"
}

.icon-close:before {
  content: "\e002"
}

.icon-account:before {
  content: "\e020"
}

.icon-settings:before {
  content: "\e021"
}

.icon-gaming:before {
  content: "\e060"
}

.icon-house:before {
  content: "\e061"
}

.icon-phone:before {
  content: "\e080"
}

.icon-tablet:before {
  content: "\e081"
}

.icon-laptop:before {
  content: "\e082"
}

.icon-topbox:before {
  content: "\e0a0"
}

.icon-netcamera:before {
  content: "\e0a1"
}

.icon-enterprise:before {
  content: "\e0a2"
}

.icon-accessibility:before {
  content: "\e0c0"
}

.icon-edit:before {
  content: "\e0e0"
}

.icon-trash:before {
  content: "\e0e1"
}

.icon-wifi:before {
  content: "\e0e2"
}

.icon-display:before {
  content: "\e0e3"
}

.icon-fire:before {
  content: "\e0e4"
}

.icon-pauseinternet:before {
  content: "\e0e5"
}

.icon-print:before {
  content: "\e0e6"
}

.icon-checkmarkalt:before {
  content: "\e140"
}

.icon-checkmark:before {
  content: "\e142"
}

.icon-warning:before {
  content: "\e300"
}

.icon-check:before {
  content: "\e301"
}

.icon-check-bg:before {
  content: "\e302"
}

.ck-bg .icon-check:before {
  content: "\e302"
}

.icon-lock-black:before {
  content: "\e303"
}

.icon-arrow:before {
  content: "\e304"
}

.vz--bg-select-arrow:before {
  content: "\e304"
}

.icon-calendar:before {
  content: "\e305"
}

.icon-allow:before {
  content: "\e306"
}

.icon-stop:before {
  content: "\e307"
}

.icon-plus:before {
  content: "\e308"
}

.icon-tooltip:before {
  content: "\e200";
}

.icon-ethernet:before {
  content: url('../images/icons/Ethernet.svg');
}

.no-br {
  border: none;
}

.eds-button {
  display: block;
  min-width: 151px;
  max-height: 44px;
  padding: 13px 41px;
  border-radius: 100px;
  background-color: black;
  color: white;
  text-align: center;
  /* margin-right: 20px; */
  border: 1px solid black;
  font-size: 14px;
  letter-spacing: 0.5px;
  font-size: 13.33px !important;
  line-height: normal;
}

.disabled_button {
  background-color: #d8dada;
  border: 1px solid #d8dada;
}

.scroll-content-div {
  /* height: 77vh !important; */
  overflow-y: auto;
  overflow-x: auto;
  display: flex;
  flex-direction: column;
  flex: 1;
}

input[type="checkbox" i] {
  cursor: pointer;
  accent-color: black;
}

.status-header {
  min-height: 3rem;
  border-bottom: 1px solid #efefef;
  padding: 21px 20px 21px 20px;
  cursor: pointer;
  display: flex;
  align-items: center;
  font-size: 16px;
}

.rot-icon {
  transform: rotate(-90deg);
}

.green {
  color: #008330;
}

.grey {
  color: #747676;
}

.blue {
  color: #0088ce;
}

.orange {
  color: #ed7000;
}

.pos-rel {
  position: relative;
}

/* This is to fix a rarely occuring bug */
.modal-header {
  justify-content: space-between !important;
}

.red {
  color: #d52b1e;
}


As i was using the vzIcon i my component but now my the requirements is that i need to use SVG files stored in a folder 

import Laptop from '../../images/icons/device-icons/Laptop.svg'
 
this is the location of a Svg file and i want you to use SVG file such that the css does not changes it occupies the same height and width

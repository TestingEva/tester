import styled from "styled-components";
import { useFirewallLogFilters } from "../../../../domain/system-logging/hooks";
import { FirewallLogFilterModel } from "../../../../domain/system-logging/models";
import { ErrorIndicator } from "../../../components/error-indicator/ErrorIndicator";
import { LoadingIndicator } from "../../../components/loading-indicator/LoadingIndicator";
import { Col, Container, Row } from "react-bootstrap";
import { useEffect, useState } from "react";
import { VZCheckbox } from "../../../components/vz-checkbox/VZCheckbox";
import { VZSmallButton } from "../styles";
import { OptionsButtonCol } from "./styles";

export const FirewallSettings: React.FC = () => {
  const [initialData, setInitialData] = useState<FirewallLogFilterModel>();
  const [currentData, setCurrentData] = useState<FirewallLogFilterModel>();
  const { data, isPending, isError } = useFirewallLogFilters();

  useEffect(() => {
    if (data !== undefined) {
      setInitialData(data);
      setCurrentData(data);
    }
  }, [data]);
  

  if (isError) {
    return <ErrorIndicator />;
  }
  if (isPending || data === undefined) {
    return <LoadingIndicator />;
  }
  return <FirewallSettingsView data={currentData!} />;
};

export const FirewallLogFilterHeader = styled(Row)`
  height: 64px;
  border-bottom: 1px solid black;
  align-items: center;
  font-size: 20px;
  font-family: "Verizon NHG eDS Bold", sans-serif;
`;

export const FirewallLogFilterRowComponent = styled(Row)<{ $disabled?: boolean }>`
  font-family: "Verizon NHG eTX Bold", sans-serif;
  height: 60px;
  border-bottom: 1px solid #d8dada;
  align-items: center;
  gap: 16px;
  color: ${(props) => (props.$disabled ? "#d8dada" : "black")};
`;

type Props = {
  data: FirewallLogFilterModel;
};
const FirewallSettingsView: React.FC<Props> = ({ data }) => {
  return (
    <Container>
      <FirewallLogFilterHeader>Accepted Events</FirewallLogFilterHeader>
      <FirewallLogFilterRowComponent>
        <VZCheckbox checked={true} onChange={() => {}} />
        Accept Incoming Connections
      </FirewallLogFilterRowComponent>
      <FirewallLogFilterRowComponent>
        <VZCheckbox checked={true} onChange={() => {}} />
        Accept Outgoing Connections
      </FirewallLogFilterRowComponent>
      <FirewallLogFilterHeader>Blocked Events</FirewallLogFilterHeader>
      <FirewallLogFilterRowComponent>
        <VZCheckbox checked={true} onChange={() => {}} />
        All blocked connections attempts
      </FirewallLogFilterRowComponent>
      <Row>
        <Col>
          <FirewallLogFilterRowComponent>
            <VZCheckbox checked={true} onChange={() => {}} />
            Winuuke
          </FirewallLogFilterRowComponent>
        </Col>
        <Col>
          <FirewallLogFilterRowComponent>
            <VZCheckbox checked={true} onChange={() => {}} />
            Multicast/Broadcast
          </FirewallLogFilterRowComponent>
        </Col>
      </Row>
      <Row>
        <Col>
          <FirewallLogFilterRowComponent>
            <VZCheckbox checked={true} onChange={() => {}} />
            Echo Chargen
          </FirewallLogFilterRowComponent>
        </Col>
        <Col>
          <FirewallLogFilterRowComponent>
            <VZCheckbox checked={true} onChange={() => {}} />
            Defragmentation Error
          </FirewallLogFilterRowComponent>
        </Col>
      </Row>
      <Row>
        <Col>
          <FirewallLogFilterRowComponent>
            <VZCheckbox checked={true} onChange={() => {}} />
            ICMP Redirect
          </FirewallLogFilterRowComponent>
        </Col>
        <Col>
          <FirewallLogFilterRowComponent>
            <VZCheckbox checked={true} onChange={() => {}} />
            ICMP Multicast
          </FirewallLogFilterRowComponent>
        </Col>
      </Row>
      <Row>
        <Col>
          <FirewallLogFilterRowComponent>
            <VZCheckbox checked={true} onChange={() => {}} />
            Blocked Fragments
          </FirewallLogFilterRowComponent>
        </Col>
        <Col>
          <FirewallLogFilterRowComponent>
            <VZCheckbox checked={true} onChange={() => {}} />
            Packet Illegal options
          </FirewallLogFilterRowComponent>
        </Col>
      </Row>
      <Row>
        <Col>
          <FirewallLogFilterRowComponent>
            <VZCheckbox checked={true} onChange={() => {}} />
            ICMP Flood
          </FirewallLogFilterRowComponent>
        </Col>
        <Col>
          <FirewallLogFilterRowComponent>
            <VZCheckbox checked={true} onChange={() => {}} />
            Syn Flood
          </FirewallLogFilterRowComponent>
        </Col>
      </Row>
      <FirewallLogFilterRowComponent>
        <VZCheckbox checked={true} onChange={() => {}} />
        UDP Flood
      </FirewallLogFilterRowComponent>
      <FirewallLogFilterHeader>Other Events</FirewallLogFilterHeader>
      <FirewallLogFilterRowComponent>
        <VZCheckbox checked={true} onChange={() => {}} />
        Remote Adminstration Attempts
      </FirewallLogFilterRowComponent>
      <FirewallLogFilterRowComponent>
        <VZCheckbox checked={true} onChange={() => {}} />
        Connection States
      </FirewallLogFilterRowComponent>
      <FirewallLogFilterHeader>Log Buffer</FirewallLogFilterHeader>
      {/* TODO: Change the disabled when requirement comes  */}
      <FirewallLogFilterRowComponent $disabled>
        <VZCheckbox checked={false} onChange={() => {}} disabled={true} />
        Prevent Log Overrun
      </FirewallLogFilterRowComponent>
      <OptionsButtonCol>
        <VZSmallButton>Cancel</VZSmallButton>
        <VZSmallButton $primary>Save</VZSmallButton>
      </OptionsButtonCol>
    </Container>
  );
};

Supppose the data is following 
{
    "acceptIncomingConnections": true,
    "acceptOutgoingConnections": true,
    "allBlockedConnectionAttempts": true,
    "blockedFragments": true,
    "connectionStates": true,
    "defragmentationError": true,
    "echoChargen": true,
    "icmpFlood": true,
    "icmpMultiCast": true,
    "icmpRedirect": true,
    "mutiCastBroadCast": true,
    "packetIllegalOptions": true,
    "remoteAdministrationAttempts": true,
    "synFlood": true,
    "udpFlood": true,
    "winuuke": true
}
now based on this i want you to create the logic in such a way that suppose if user clicked on accept Outgoing connections then the currentData will be the following 
{
    "acceptIncomingConnections": true,
    "acceptOutgoingConnections": false,
    "allBlockedConnectionAttempts": true,
    "blockedFragments": true,
    "connectionStates": true,
    "defragmentationError": true,
    "echoChargen": true,
    "icmpFlood": true,
    "icmpMultiCast": true,
    "icmpRedirect": true,
    "mutiCastBroadCast": true,
    "packetIllegalOptions": true,
    "remoteAdministrationAttempts": true,
    "synFlood": true,
    "udpFlood": true,
    "winuuke": true
}

import { z, ZodTypeAny } from "zod";

/**
 * A utility to catch schema parsing errors and apply a default value.
 * Logs the expected schema and the received invalid value.
 *
 * @param schema - The Zod schema to validate against
 * @param defaultValue - The default value to return if validation fails
 */
export function zodCatcher<T extends ZodTypeAny>(
  schema: T,
  defaultValue: z.infer<T>
): z.ZodType<z.infer<T>> {
  return z.preprocess((input) => {
    const result = schema.safeParse(input);
    if (result.success) {
      return result.data;
    } else {
      console.warn(
        "[zodCatcher] Validation failed.",
        "\nExpected schema:", schema.toString?.() ?? "[Schema]",
        "\nReceived value:", input,
        "\nUsing default value:", defaultValue
      );
      return defaultValue;
    }
  }, schema);
}

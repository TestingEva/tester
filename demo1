import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import Cookies from 'universal-cookie';

import "./LoginPage.css";
import { ReactComponent as VZLogo } from "../../images/VZLogo.svg";
import RouterLogin from "../../images/cr1000a/VZRouterLogin.png";
import RouterFront from "../../images/cr1000a/RouterFront.png";
import Tooltip from '../../common/tooltip/Tooltip';
import getMenuListData from '../../constants/SideBarData';
import { HelpComponent } from '../../common/help/HelpComponent';
import Footer from '../../common/footer/Footer';
import TooltipContent from './TooltipContent';
import { prplStdHash, fieldRouterHash, userNameHash } from './LoginUtils';
import CONFIG from '../../config/env.json';
import { VZCheckbox } from '../../common/checkbox/VZCheckbox';
import { fetchRequests } from "../../utils/FetchRequest";
import { QSWFlowpage } from '../system/quick-setup-wizard/qsw-flow-page/QSWFlowPage';

const LoginPage = () => {
    const [rememberMe, setRememberMe] = useState(false);
    const [password, setPassword] = useState('');
    const [showModal, setShowModal] = useState(false);
    const [timeRemaining, setTimeRemaining] = useState(0);
    const [showPassword, setShowPassword] = useState(false);
    const [hideLoginWarning, setHideLoginWarning] = useState(true);
    const [disableLoginButton, setDisableLoginButton] = useState(false);
    const [currentPage, setCurrentPage] = useState(0);
    const navigate = useNavigate();
    const [isCustomPassword, setIsCustomPassword] = useState(false);
    const [loginNeeded, setLoginNeeded] = useState(true);
    const [cookieError, setCookieError] = useState(false);

    useEffect(() => {
        fetchRequests({ url: CONFIG?.LOGIN_META_DATA_URL }).then(metaData => {
            if (metaData?.adminPwdChanged !== undefined && metaData?.passwordRequired !== undefined) {
                setIsCustomPassword(metaData?.adminPwdChanged);
                setLoginNeeded(metaData?.passwordRequired)
            }
        })
        // eslint-disable-next-line
    }, []);

    useEffect(() => {
        const handleUnload = () => {
            if (!rememberMe) {
                const cookies = new Cookies();
                cookies.remove('MyNetworkSettingsAuth');
            }
        };

        window.addEventListener('beforeunload', handleUnload);

        return () => {
            window.removeEventListener('beforeunload', handleUnload);
        };
    }, [rememberMe]);

    // Remaining code remains the same
};

export default LoginPage;

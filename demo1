import dayjs from "dayjs";
import React, { useState } from "react";
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.module.css";
import "./DatePicker.css";
import { ArrowLeft, ArrowRight, CustomCalendarInput, CustomHeaderContainer, VZDatePickerContainer } from "./styles";

interface VZDatePickerProps {
  selectedDate: dayjs.Dayjs | null;
  setSelectedDate: (date: dayjs.Dayjs | null) => void;
}

const formatDayJsDate = (date: dayjs.Dayjs | null) => {
  return date ? date.format("MMM YYYY") : "";
};

const CustomHeader = ({
  event,
  selectedDate,
  setSelectedDate,
}: {
  event: any;
  selectedDate: dayjs.Dayjs | null;
  setSelectedDate: (date: dayjs.Dayjs | null) => void;
}) => (
  <CustomHeaderContainer>
    <ArrowLeft
      onClick={() => {
        event?.decreaseMonth();
        setSelectedDate(dayjs(selectedDate).subtract(1, "month"));
      }}
      className="icon icon--arrow vz-date-left-arrow"
    />
    <div className="flex-1" />
    <DatePicker
      selected={selectedDate?.toDate()}
      onChange={(date: Date | null) => setSelectedDate(date ? dayjs(date) : null)}
      onSelect={(date: Date | null) => setSelectedDate(date ? dayjs(date) : null)}
      onYearChange={(date: Date | null) => setSelectedDate(date ? dayjs(date) : null)}
      showMonthYearPicker
      adjustDateOnChange
      customInput={<CustomCalendarInput>{formatDayJsDate(selectedDate)}</CustomCalendarInput>}
      calendarClassName="vz-month-calendar"
      dateFormat={"MMM YYYY"}
    />
    <div className="flex-1" />
    <ArrowRight
      onClick={() => {
        event?.increaseMonth();
        setSelectedDate(dayjs(selectedDate).add(1, "month"));
      }}
      className="icon icon--arrow vz-date-right-arrow"
    />
  </CustomHeaderContainer>
);

export const VZDatePicker: React.FC<VZDatePickerProps> = ({ selectedDate, setSelectedDate }) => {
  const [openCalendar, setOpenCalendar] = useState(false);

  const setDate = (date: Date | null) => {
    setSelectedDate(date ? dayjs(date) : null);
  };

  return (
    <VZDatePickerContainer onMouseEnter={() => setOpenCalendar(true)} onMouseLeave={() => setOpenCalendar(false)}>
      <DatePicker
        selected={selectedDate?.toDate()}
        onChange={(date) => setDate(date)}
        dateFormat={"MM/dd/yy"}
        calendarClassName="vz-calendar"
        className="vz-date-picker h"
        adjustDateOnChange
        formatWeekDay={(nameOfDay) => nameOfDay.slice(0, 1)}
        renderCustomHeader={(e) => (
          <CustomHeader event={e} selectedDate={selectedDate} setSelectedDate={setSelectedDate} />
        )}
        open={openCalendar}
      />
    </VZDatePickerContainer>
  );
};


This one is working fine as of my expectations  but i have some issues while using this as my component when i change the month and Year by the inner Date Picker its changed as expected but the days are not getting rendered at soon as i change I need to move my mouse outside the DatePicker Component and again open the componnet then the new dates are rendered

steps to produce this scenario:
open the DatePicker , click on the month and select the a new month from the Month Picker and see the dates are not changed its still of the preious month the new dates will be rendered when you move your cursor out of date Picker and again hover back

could you fix this case 

import { useMemo, useState } from "react";
import { Dropdown } from "react-bootstrap";
import { useQuerySuggestions } from "../../../domain/search/hooks";
import { AutocompleteText, InputWrapper, SearchContainer, StyledInput } from "./styles";

const SearchInput: React.FC = () => {
  const { suggestQueries, suggestions, currentSuggestion, nextSuggestion, prevSuggestion } = useQuerySuggestions();
  const [query, setQuery] = useState("");
  const canShowDropDown = useMemo(() => suggestions.length > 1, [suggestions]);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = e.target.value;
    setQuery(value);
    suggestQueries(value);
  };

  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === "ArrowDown") {
      nextSuggestion();
    } else if (e.key === "ArrowUp") {
      prevSuggestion();
    } else if (e.key === "Tab" && currentSuggestion) {
      e.preventDefault();
      setQuery(query + currentSuggestion);
    }
  };

  return (
    <SearchContainer>
      <InputWrapper>
        <AutocompleteText>
          {query}
          {currentSuggestion ?? ""}
        </AutocompleteText>
        <StyledInput
          type="text"
          value={query}
          onChange={handleInputChange}
          onKeyDown={handleKeyDown}
          placeholder="Search..."
        />
      </InputWrapper>

      {canShowDropDown && (
        <Dropdown.Menu show style={{ width: "100%" }}>
          {suggestions.map((sugg) => (
            <Dropdown.Item key={sugg} active={sugg === currentSuggestion}>
              {sugg}
            </Dropdown.Item>
          ))}
        </Dropdown.Menu>
      )}
    </SearchContainer>
  );
};

export default SearchInput;
import { FormControl } from "react-bootstrap";
import styled from "styled-components";

export const SearchContainer = styled.div`
  position: relative;
  width: 300px;
`;

export const InputWrapper = styled.div`
  position: relative;
  display: flex;
`;

export const StyledInput = styled(FormControl)`
  font-size: 16px;
  padding: 8px;
  position: absolute;
  background: transparent;
  z-index: 2;
`;

export const AutocompleteText = styled.span`
  font-size: 16px;
  padding: 8px;
  color: gray;
  pointer-events: none;
  white-space: nowrap;
  overflow: hidden;
`;


Please work on the Current Suggestion 

its not shown with the query if i console I could find the same but the same is not added in the text in greyed color


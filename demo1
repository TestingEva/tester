const path = require("path");
const glob = require("glob");
const HtmlWebpackPlugin = require("html-webpack-plugin");
const CopyWebpackPlugin = require("copy-webpack-plugin");
const TerserPlugin = require("terser-webpack-plugin");

module.exports = {
  entry: {
    bundle: glob.sync("build/static/?(js|css)/main.*.?(js|css)").map((f) =>
      path.resolve(__dirname, f)
    ),
  },
  output: {
    path: path.resolve(__dirname, "dist"),
    filename: "static/js/bundle.js",
    assetModuleFilename: "static/assets/[hash][ext][query]",
    clean: true, // Cleans old files on build
  },
  module: {
    rules: [
      {
        test: /\.css$/,
        use: ["style-loader", "css-loader"],
      },
      {
        test: /\.scss$/,
        use: ["style-loader", "css-loader", "sass-loader"],
      },
      {
        test: /\.(png|jpe?g|gif|svg|webp|ico)$/,
        type: "asset/resource",
        generator: {
          filename: "static/images/[name][hash][ext]",
        },
      },
      {
        test: /\.(woff2?|eot|ttf|otf)$/,
        type: "asset/resource",
        generator: {
          filename: "static/fonts/[name][hash][ext]",
        },
      },
      {
        test: /\.(mp4|webm|ogg|mp3|wav|flac|aac)$/,
        type: "asset/resource",
        generator: {
          filename: "static/media/[name][hash][ext]",
        },
      },
    ],
  },
  optimization: {
    minimize: true,
    minimizer: [new TerserPlugin()],
  },
  plugins: [
    new HtmlWebpackPlugin({
      template: "public/index.html",
      inject: "body",
    }),
    new CopyWebpackPlugin({
      patterns: [{ from: "public/assets", to: "static/assets" }],
    }),
  ],
};

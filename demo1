import { BackhaulLoggingConstants } from '../../../constants/Diagnostics'
import { bytesToSize } from '../../../utils/DataConversion'

const BackhaulLoggingTableCell = ({ dataRow }) => {
    const dateTime = new Date(dataRow.dateTime)
    const date = dateTime.toISOString().split('T')[0]
    
    // Extracting time in 12-hour format
    const hours = dateTime.getHours();
    const minutes = dateTime.getMinutes();
    const seconds = dateTime.getSeconds();
    const ampm = hours >= 12 ? 'PM' : 'AM';
    const twelveHourFormat = `${hours % 12 || 12}:${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}.${dateTime.getMilliseconds()} ${ampm}`;
    
    const extractedDateTime = {
        date: date,
        time: twelveHourFormat,
    }
    
    const temp = dataRow?.dataRate
    dataRow.date = extractedDateTime.date
    dataRow.time = extractedDateTime.time
    dataRow.dataRate = bytesToSize(Number(temp))
    
    return (
        <tr>
            {BackhaulLoggingConstants.backhaulKeys.map((val,i) => (
                <td key={i}>{dataRow[val]}</td>
            ))}
        </tr>
    )
}

export default BackhaulLoggingTableCell

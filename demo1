
function removeDuplicatesAndFilter(data: ScoreData[]): ScoreData[] {
  return data.reduce((acc, item) => {
    if (item.score < 0) return acc;

    const key = `${item.channel}-${item.score}-${item.alias}`;
    if (!acc.some(entry => `${entry.channel}-${entry.score}-${entry.alias}` === key)) {
      acc.push(item);
    }
    
    return acc;
  }, [] as ScoreData[]);
}

const filteredData = removeDuplicatesAndFilter(data);
console.log(filteredData);


data = [
    {
        "channel": 1,
        "score": 0,
        "alias": "WLAN_24G"
    },
    {
        "channel": 6,
        "score": 1,
        "alias": "WLAN_24G"
    },
    {
        "channel": 11,
        "score": 0,
        "alias": "WLAN_24G"
    },
    {
        "channel": 36,
        "score": 7,
        "alias": "WLAN_5G"
    },
    {
        "channel": 52,
        "score": 8,
        "alias": "WLAN_5G"
    },
    {
        "channel": 52,
        "score": 8,
        "alias": "WLAN_5G"
    },
    {
        "channel": 100,
        "score": 7,
        "alias": "WLAN_5G"
    },
    {
        "channel": 120,
        "score": 10,
        "alias": "WLAN_5G"
    },
    {
        "channel": 132,
        "score": 8,
        "alias": "WLAN_5G"
    },
    {
        "channel": 149,
        "score": 7,
        "alias": "WLAN_5G"
    },
    {
        "channel": 37,
        "score": 10,
        "alias": "WLAN_6G"
    },
    {
        "channel": 69,
        "score": 10,
        "alias": "WLAN_6G"
    },
    {
        "channel": 101,
        "score": 10,
        "alias": "WLAN_6G"
    },
    {
        "channel": 133,
        "score": 10,
        "alias": "WLAN_6G"
    },
    {
        "channel": 181,
        "score": 10,
        "alias": "WLAN_6G"
    },
    {
        "channel": 197,
        "score": 10,
        "alias": "WLAN_6G"
    },
    {
        "channel": 197,
        "score": 10,
        "alias": "WLAN_6G"
    },
    {
        "channel": 197,
        "score": 10,
        "alias": "WLAN_6G"
    }
]

the above data is of type 
type ScoreData = {
  channel: number;
  score: number;
  alias: string;
};


now i want you to write a function which takes the above data as input and removes the duplicates also if the score of any data is less than 0 filter that out 

for example in this case it should remove 

{
        "channel": 197,
        "score": 10,
        "alias": "WLAN_6G"
    },
{
        "channel": 197,
        "score": 10,
        "alias": "WLAN_6G"
    },
 {
        "channel": 52,
        "score": 8,
        "alias": "WLAN_5G"
    },

and return the array 

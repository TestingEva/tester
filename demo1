import { getUsers } from './testing';
import wretch from 'wretch';

jest.mock('wretch');

describe('API Testing', () => {
    test('getUsers - success', async () => {
        const mockResponse = {
            userId: 1,
            id: 1,
            title: "delectus aut autem",
            completed: false
        };

        // Mock wretch.get() to return an object with a json method that resolves to the mockResponse
        (wretch as jest.Mocked<typeof wretch>).mockReturnValueOnce({
            get: jest.fn().mockResolvedValueOnce({ json: jest.fn().mockResolvedValueOnce(mockResponse) })
        });

        const users = await getUsers();
        expect(users).toEqual(mockResponse);
    });

    test('getUsers - failure', async () => {
        // Mock wretch.get() to return an object with a json method that rejects with an error
        (wretch as jest.Mocked<typeof wretch>).mockReturnValueOnce({
            get: jest.fn().mockRejectedValueOnce(new Error('Network error'))
        });

        await expect(getUsers()).rejects.toThrow('Failed to fetch users');
    });
});

import { Col } from "react-bootstrap";
import { DMZHostPageInfo } from "../../../domain/dmz-host/models";
import { RouteType } from "../../../domain/misc/models";
import { VZBody } from "../../components/vz-body/VZBody";
import { VZButton } from "../../components/vz-button/VZButton";
import { VZDropdown } from "../../components/vz-dropdown/VZDropdown";
import { VZHeader } from "../../components/vz-header/VZHeader";
import { VZInputTextField } from "../../components/vz-input/VZInput";
import { VZToggleButton } from "../../components/vz-toggle-button/VZToggleButton";
import { DMZHostDesc, DMZHostDetailsSection, DMZHostHeader, ToggleContainer } from "./styles";
import { convertIpv4InfoToDropdownInfo, convertIpv6InfoToDropdownInfo } from "./utils";

type Props = {
  data: DMZHostPageInfo;
  disableApplyButton: boolean;
  handleChange: (key: keyof DMZHostPageInfo, value?: string) => void;
  ipv4Octets: string[];
  disableEditInteraction: boolean;
  selectedIpv4Address: string;
  selectedIpv6Address: string;
};

const customCSS = {
  width: "70px",
  paddingRight: "0 !important",
};

export const DMZHostView: React.FC<Props> = ({
  data,
  disableApplyButton,
  handleChange,
  ipv4Octets,
  disableEditInteraction,
  selectedIpv4Address,
  selectedIpv6Address,
}) => {
  console.log(data);
  return (
    <>
      <VZHeader
        title="DMZ Host"
        breadcrumbData={[{ label: "Security & Firewall" }, { label: "DMZ Host", destType: RouteType.DMZ_HOST }]}
        rightBody={
          <VZButton
            disabled={disableApplyButton}
            onClick={() => {
              console.log(data);
            }}
          >
            Apply Changes
          </VZButton>
        }
      />
      <VZBody>
        <DMZHostHeader className="hb">How it works...</DMZHostHeader>
        <DMZHostDesc>
          Allow a single computer or device to be fully exposed to the <br />
          Internet.
        </DMZHostDesc>
        <ToggleContainer>
          <Col className="col-4 b">DMZ IPv4 Host</Col>
          <Col>
            <VZToggleButton checked={data.ipv4Enabled} onChange={() => handleChange("ipv4Enabled")} />
            <label className="ps-3">{data.ipv4Enabled ? "Enabled" : "Disabled"}</label>
          </Col>
        </ToggleContainer>
        <DMZHostDetailsSection $needDivider>
          <Col className="col-3 b ps-0">Local Host </Col>
          <Col className="col-3">
            <VZDropdown
              selectedItem={selectedIpv4Address}
              options={convertIpv4InfoToDropdownInfo(data.ipv4HostInfo)}
              onSelect={(val) => handleChange("ipv4Address", val)}
              getOptionAsString={(e) => e}
              disabled={!data.ipv4Enabled}
            />
          </Col>
        </DMZHostDetailsSection>
        <DMZHostDetailsSection>
          <Col className="col-3 b ps-0">Address </Col>
          <Col>
            <VZInputTextField value={ipv4Octets[0]} onChange={() => {}} disabled style={customCSS} error={false} />
            <VZInputTextField value={ipv4Octets[1]} onChange={() => {}} disabled style={customCSS} error={false} />
            <VZInputTextField value={ipv4Octets[2]} onChange={() => {}} disabled style={customCSS} error={false} />
            <VZInputTextField
              value={ipv4Octets[3]}
              onChange={(e) => handleChange("ipv4Address", e)}
              disabled={!data.ipv4Enabled || disableEditInteraction}
              style={customCSS}
              error={false}
              placeHolder={"0"}
            />
          </Col>
        </DMZHostDetailsSection>
        <ToggleContainer>
          <Col className="col-4 b">DMZ IPv6 Host</Col>
          <Col>
            <VZToggleButton checked={data.ipv6Enabled} onChange={() => handleChange("ipv6Enabled")} />
            <label className="ps-3">{data.ipv6Enabled ? "Enabled" : "Disabled"}</label>
          </Col>
        </ToggleContainer>
        <DMZHostDetailsSection $needDivider>
          <Col className="col-3 b ps-0">Local Host </Col>
          <Col className="col-3">
            <VZDropdown
              disabled={data.ipv6Enabled}
              selectedItem={selectedIpv6Address}
              onSelect={(val) => handleChange("ipv6Address", val)}
              options={convertIpv6InfoToDropdownInfo(data.ipv6HostInfo)}
              getOptionAsString={(e) => e}
              placeHolder="Menu"
            />
          </Col>
        </DMZHostDetailsSection>
        <DMZHostDetailsSection $needDivider>
          <Col className="col-3 b ps-0">Address </Col>
          <Col>{data.ipv6Address}</Col>
        </DMZHostDetailsSection>
        <DMZHostDetailsSection $needDivider>
          <Col className="col-3 b ps-0">MAC Address </Col>
          <Col>MAC Address</Col>
        </DMZHostDetailsSection>
      </VZBody>
    </>
  );
};

So i want you to work on the last Mac Address Field 
so I want you to use the data.ipv6Address and find the Mac address from the following set
data ={
    "defaultOctets": [
        392,
        168,
        1,
        1
    ],
    "ipv4Enabled": false,
    "ipv4Address": "",
    "ipv6Enabled": false,
    "ipv6Address": "",
    "ipv4HostInfo": [
        {
            "hostName": "A220090-PC1",
            "ipAddress": "192.168.1.154"
        },
        {
            "hostName": "unknown_1c: 61:b4:b8:13",
            "ipAddress": "192.168.0.50"
        },
        {
            "hostName": "E3200-64CC22736BAE",
            "ipAddress": "192.168.1.100"
        },
        {
            "hostName": "CE1000A-A82376BEA88",
            "ipAddress": "192.168.1.101"
        },
        {
            "hostName": "VIN0019ALKKW1DD",
            "ipAddress": "192.168.1.3"
        },
        {
            "hostName": "CW64G9QJNX",
            "ipAddress": "192.168.1.6"
        }
    ],
    "ipv6HostInfo": [
        {
            "hostName": "VIN0019ALKKW1DA",
            "ipAddress": "fe80::5cc4:efff:fef6:e2d1",
            "macAddress": "5E:C4:EF:F6:E2:D1"
        },
        {
            "hostName": "test1",
            "ipAddress": "fe81",
            "macAddress": "5E:C4:EF:F6:E2:D2"
        },
        {
            "hostName": "test2",
            "ipAddress": "fe82",
            "macAddress": "5E:C4:EF:F6:E2:D3"
        },
        {
            "hostName": "test3",
            "ipAddress": "fe83",
            "macAddress": "5E:C4:EF:F6:E2:D3"
        }
    ]
}

import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { renderHook, waitFor } from "@testing-library/react";
import { useHomePageDetails } from "./hooks";

const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      retry: false,
    },
  },
});

type WrapperType = {
  children: JSX.Element;
};

const wrapper: React.FC<WrapperType> = (props: WrapperType) => <QueryClientProvider client={queryClient}>{props.children}</QueryClientProvider>;

test("my first test", async () => {
  const { result } = renderHook(() => useHomePageDetails(), { wrapper });
  await waitFor(() => { console.log(result.current.status); expect(result.current.isSuccess).toBe(true) });

  expect(result.current.data).toBeDefined()
})


This is coming as the output 

 console.log
      pending

      at src/domain/home/hooks.test.tsx:21:33

    console.log
      pending

      at src/domain/home/hooks.test.tsx:21:33

    console.log
      error

      at src/domain/home/hooks.test.tsx:21:33

    console.log
      error

      at src/domain/home/hooks.test.tsx:21:33

    console.log
      error

      at src/domain/home/hooks.test.tsx:21:33

    console.log
      error

      at src/domain/home/hooks.test.tsx:21:33

    console.log
      error

      at src/domain/home/hooks.test.tsx:21:33

    console.log
      error

      at src/domain/home/hooks.test.tsx:21:33

    console.log
      error

      at src/domain/home/hooks.test.tsx:21:33

    console.log
      error

      at src/domain/home/hooks.test.tsx:21:33

    console.log
      error

      at src/domain/home/hooks.test.tsx:21:33

    console.log
      error

      at src/domain/home/hooks.test.tsx:21:33

    console.log
      error

      at src/domain/home/hooks.test.tsx:21:33

    console.log
      error

      at src/domain/home/hooks.test.tsx:21:33

    console.log
      error

      at src/domain/home/hooks.test.tsx:21:33

    console.log
      error

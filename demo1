import { renderHook, act, waitFor } from "@testing-library/react";
import nock from "nock";
import { LOGIN_META_DATA_URL } from "../../data/endpoints";
import { useLoginMetadata } from "./hooks";

describe("useLoginMetadata", () => {
    afterEach(() => {
        nock.cleanAll();
    });

    test("should return login metadata", async () => {
        const scope = nock(LOGIN_META_DATA_URL)
            .post('/')
            .reply(200, {
                adminPwdChanged: false,
                passwordRequired: true
            });

        const { result } = renderHook(() => useLoginMetadata());
        await waitFor(() => expect(result.current.status).toBe("loading"))


        await act(async () => {
            await waitFor(() => expect(result.current.status).toBe("success"));
        });

        expect(result.current.data).toEqual({
            adminPwdChanged: false,
            passwordRequired: true
        });

        expect(scope.isDone()).toBe(true);
    });

    test("should handle API error", async () => {
        const scope = nock(LOGIN_META_DATA_URL)
            .post('/')
            .reply(500);

        const { result } = renderHook(() => useLoginMetadata());
        await waitFor(() => expect(result.current.status).toBe("loading"))


        await act(async () => {
            await waitFor(() => expect(result.current.status).toBe("error"));
        });

        expect(result.current.error).toEqual(new Error("Failed to fetch login metadata"));

        expect(scope.isDone()).toBe(true);
    });
});

for the act its saying "Avoid wrapping Testing Library util calls in `act`"

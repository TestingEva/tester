import CONFIG from '../config/env.json'
import { logout } from './Logout'
import { getCookie } from "./common"
import { errorLogs, infoLogs } from './logger';

export async function fetchRequests({ mainURL = CONFIG?.ROUTER_IP, url = "", method = "POST", body = "", conType = "application/json", timeoutValue = 10000, headers = {}, needJson = true, onError }) {

    const controller = new AbortController();

    const timerId = setTimeout(() => {
        controller.abort()
    }, timeoutValue);
    infoLogs('NetworkRequest', `API request sent ${url}`);
    const response = await fetch(mainURL + url, {
        mode: "cors",
        method: method,
        headers: { ...headers, 'content-type': conType, "sessionAuth": getCookie("MyNetworkSettingsAuth") },
        body: body,
        signal: controller?.signal,
    }).then(response => {
        if (response.status === 200) {
            return needJson ? response.json() : response;
        } else if (response.status === 204) {
            return "No Content"
        }
        else if (response.status === 401) {
            const cookie = getCookie("MyNetworkSettingsAuth");

            if (cookie !== undefined && cookie !== "") {
                logout();
            }

            return response;
        } else {
            if (!response.ok) {
                // This is logged to let it call other APIs rather than stopping it
                // console.log('Network Response was not ok')
                errorLogs('ServerResponse', `Network Response was not ok for ${url} `, `status:${response.status}`);
            }
        }
    }).catch(error => {
        errorLogs('FetchError', `${error.stack}`)
        if (onError && typeof onError === 'function')
            onError()
    })
    // This is logged to let it call other APIs rather than stopping it
    clearTimeout(timerId);

    return response;
}

export function dynamicURL(url, sn) {
    const splitUrl = url.split('/');
    return (`${splitUrl[1]}/${sn}/${splitUrl[2]}/`)
}


the main error with the page is i am unable to catch the error like errorLogs in the catch block is never getting executed 
but in the console i am finding that the error is being thrown from the following line  "const response = await fetch(mainURL + url, {"
how could i handle this situation


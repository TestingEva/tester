import React, { useState, useEffect } from "react";
import styled from "styled-components";

interface Props {
  checked: boolean;
  onChange: (val: boolean) => void;
  disabled: boolean;
}

const CheckboxTemplate = styled.div<{ $checked: boolean; $disabled: boolean }>`
  height: 20px;
  width: 20px;
  cursor: ${(props) => (props.$disabled ? "not-allowed" : "pointer")};
  color: white;
  border: 1px solid ${(props) => (props.$disabled ? "#d8dada" : "black")};
  background-color: ${(props) => (props.$checked ? "black" : "white")};
  display: flex;
  align-items: center;
  justify-content: center;

  .icon {
    display: ${(props) => (props.$checked ? "block" : "none")};
    color: white;
  }
`;

export const VZCheckbox: React.FC<Props> = ({ checked, onChange, disabled }) => {
  const [isChecked, setIsChecked] = useState(checked);

  useEffect(() => {
    setIsChecked(checked);
  }, [checked]);

  const toggleChecked = () => {
    if (disabled) return;
    const newValue = !isChecked;
    setIsChecked(newValue);
    onChange(newValue);
  };

  return (
    <CheckboxTemplate $checked={isChecked} onClick={toggleChecked} $disabled={disabled}>
      <i className="icon icon--check vz--checkbox--tick">âœ”</i>
    </CheckboxTemplate>
  );
};
